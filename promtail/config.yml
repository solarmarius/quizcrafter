server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  - job_name: docker
    static_configs:
      - targets:
          - localhost
        labels:
          job: containerlogs
          __path__: /var/lib/docker/containers/*/*-json.log

    pipeline_stages:
      # Parse Docker JSON log format
      - json:
          expressions:
            log: log
            stream: stream
            time: time
            attrs: attrs

      # Extract service name from attrs (this is our container identifier)
      - json:
          expressions:
            service: service
            version: version
          source: attrs

      # Set timestamp
      - timestamp:
          format: RFC3339Nano
          source: time

      # Add base labels
      - labels:
          stream:
          service:
          version:

      # For backend logs, handle both HTTP access logs and JSON structured logs
      - match:
          selector: '{service="backend"}'
          stages:
            # Extract status codes from HTTP access logs (200, 404, etc.)
            - regex:
                expression: 'HTTP/[\d.]+"\s+(?P<status_code>\d{3})'
                source: log

            # Extract status codes from JSON logs (502, etc.)
            - json:
                expressions:
                  json_status_code: status_code
                  level: level
                  method: method
                  event: event
                  logger: logger
                source: log

            # Merge both status code extractions into one field
            - template:
                source: status_code
                template: '{{ if .json_status_code }}{{ .json_status_code }}{{ else }}{{ .status_code }}{{ end }}'

            # Add labels
            - labels:
                status_code:
                level:
                event:
                logger:

      # Set the final log output
      - output:
          source: log
