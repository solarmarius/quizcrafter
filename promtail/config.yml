server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  - job_name: docker
    static_configs:
      - targets:
          - localhost
        labels:
          job: containerlogs
          __path__: /var/lib/docker/containers/*/*-json.log

    pipeline_stages:
      # Parse Docker JSON log format
      - json:
          expressions:
            log: log
            stream: stream
            time: time
            attrs: attrs

      # Extract service name from attrs (this is our container identifier)
      - json:
          expressions:
            service: service
            version: version
          source: attrs

      # Set timestamp
      - timestamp:
          format: RFC3339Nano
          source: time

      # Add base labels
      - labels:
          stream:
          service:
          version:

      # For backend logs, parse structured JSON logging data
      - match:
          selector: '{service="backend"}'
          stages:
            # Parse JSON log structure
            - json:
                expressions:
                  level: level
                  status_code: status_code
                  method: method
                  path: path
                  user_id: user_id
                  event: event
                  logger: logger
                  request_id: request_id
                  duration_ms: duration_ms
                  response_time: response_time
                  error_type: error_type
                  quiz_id: quiz_id
                  course_id: course_id
                  canvas_quiz_id: canvas_quiz_id
                  position: position
                  successful_exports: successful_exports
                  failed_exports: failed_exports
                source: log

            # Add extracted fields as labels (only add essential ones to avoid high cardinality)
            - labels:
                level:
                status_code:
                method:
                event:
                logger:
                error_type:

      # Set the final log output
      - output:
          source: log
