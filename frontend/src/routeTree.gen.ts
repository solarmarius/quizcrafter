/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutIndexImport } from './routes/_layout/index'
import { Route as LoginSuccessImport } from './routes/login/success'
import { Route as LayoutSettingsImport } from './routes/_layout/settings'
import { Route as LayoutQuizzesImport } from './routes/_layout/quizzes'
import { Route as LayoutProjectThesisImport } from './routes/_layout/project-thesis'
import { Route as LayoutPrivacyPolicyImport } from './routes/_layout/privacy-policy'
import { Route as LayoutCreateQuizImport } from './routes/_layout/create-quiz'
import { Route as LayoutQuizIdImport } from './routes/_layout/quiz.$id'
import { Route as LayoutQuizIdIndexImport } from './routes/_layout/quiz.$id.index'
import { Route as LayoutQuizIdQuestionsImport } from './routes/_layout/quiz.$id.questions'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const LoginSuccessRoute = LoginSuccessImport.update({
  path: '/success',
  getParentRoute: () => LoginRoute,
} as any)

const LayoutSettingsRoute = LayoutSettingsImport.update({
  path: '/settings',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutQuizzesRoute = LayoutQuizzesImport.update({
  path: '/quizzes',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutProjectThesisRoute = LayoutProjectThesisImport.update({
  path: '/project-thesis',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutPrivacyPolicyRoute = LayoutPrivacyPolicyImport.update({
  path: '/privacy-policy',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutCreateQuizRoute = LayoutCreateQuizImport.update({
  path: '/create-quiz',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutQuizIdRoute = LayoutQuizIdImport.update({
  path: '/quiz/$id',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutQuizIdIndexRoute = LayoutQuizIdIndexImport.update({
  path: '/',
  getParentRoute: () => LayoutQuizIdRoute,
} as any)

const LayoutQuizIdQuestionsRoute = LayoutQuizIdQuestionsImport.update({
  path: '/questions',
  getParentRoute: () => LayoutQuizIdRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_layout/create-quiz': {
      preLoaderRoute: typeof LayoutCreateQuizImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/privacy-policy': {
      preLoaderRoute: typeof LayoutPrivacyPolicyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/project-thesis': {
      preLoaderRoute: typeof LayoutProjectThesisImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/quizzes': {
      preLoaderRoute: typeof LayoutQuizzesImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/settings': {
      preLoaderRoute: typeof LayoutSettingsImport
      parentRoute: typeof LayoutImport
    }
    '/login/success': {
      preLoaderRoute: typeof LoginSuccessImport
      parentRoute: typeof LoginImport
    }
    '/_layout/': {
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/quiz/$id': {
      preLoaderRoute: typeof LayoutQuizIdImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/quiz/$id/questions': {
      preLoaderRoute: typeof LayoutQuizIdQuestionsImport
      parentRoute: typeof LayoutQuizIdImport
    }
    '/_layout/quiz/$id/': {
      preLoaderRoute: typeof LayoutQuizIdIndexImport
      parentRoute: typeof LayoutQuizIdImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  LayoutRoute.addChildren([
    LayoutCreateQuizRoute,
    LayoutPrivacyPolicyRoute,
    LayoutProjectThesisRoute,
    LayoutQuizzesRoute,
    LayoutSettingsRoute,
    LayoutIndexRoute,
    LayoutQuizIdRoute.addChildren([
      LayoutQuizIdQuestionsRoute,
      LayoutQuizIdIndexRoute,
    ]),
  ]),
  LoginRoute.addChildren([LoginSuccessRoute]),
])

/* prettier-ignore-end */
